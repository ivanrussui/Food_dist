{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kEAAkE;AAClE,sCAAsC;AACtC;AACA,4EAA4E;AAC5E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,MAAM;AACN,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,KAAK;AACL;AACA,yCAAyC;AACzC;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnI8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2EAA2E;AAC3E;AACA;AACA;AACA,eAAe,UAAU,MAAM,SAAS;AACxC,sCAAsC,WAAW;AACjD,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+DAAW;AACZ,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO;AACX,iFAAiF;AACjF,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrFpB;AAC8C;AACA;AAC9C;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4DAAQ;AACX,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;AACA;AACA;AACA,KAAK,kBAAkB;AACvB;AACA,mBAAmB;AACnB,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iDAAS,0BAA0B;AACrC;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,0CAA0C;AAC1C,6CAA6C;AAC7C,GAAG,kDAAU,YAAY;AACzB,GAAG;AACH;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACzHpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC,CAAC;AACF,CAAC;;;;;;;;;;;;;;;ACxErB;AACA,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B,cAAc;AACxC,4BAA4B,WAAW;AACvC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,iBAAiB,mBAAmB;AACpC,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,qBAAqB;AACrB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACtLrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACvDnB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC1EpB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,gCAAgC;AAChC;AACA,aAAa;AACb;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,qCAAqC,IAAI,YAAY,WAAW,IAAI;AACpE;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACkB;;;;;;;UCnClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACkC;AACE;AACA;AACA;AACF;AACE;AACE;AACE;AACxC;AACA;AACA;AACA,uCAAuC,0DAAS;AAChD;AACA;AACA,CAAC,yDAAI;AACL,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,yDAAI;AACL,CAAC,0DAAK,wBAAwB;AAC9B,CAAC,2DAAM,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["// ? пишем функцию и внутрь перемещаем участок кода из файла script.js\r\nfunction calc() {\r\n\tconst result = document.querySelector('.calculating__result span'); // внутри класса span\r\n\r\n\tlet sex, height, weight, age, ratio;\r\n\r\n\t// ? если в localStorage есть инфа мы ее оттуда берем и помезщаем в переменные, а если инфы нет то задае ее по умолчанию\r\n\tif (localStorage.getItem('sex')) {\r\n\t\tsex = localStorage.getItem('sex');\r\n\t}\telse {\r\n\t\tsex = 'female';\r\n\t\tlocalStorage.setItem('sex', 'female');\r\n\t}\r\n\r\n\tif (localStorage.getItem('ratio')) {\r\n\t\tratio = localStorage.getItem('ratio');\r\n\t}\telse {\r\n\t\tratio = 1.375;\r\n\t\tlocalStorage.setItem('ratio', 1.375);\r\n\t}\r\n\r\n\t// функция активности блоков. Инициализирует выбранные блоки\r\n\tfunction initLocalSettings(selector, activeClass) {\r\n\t\tconst elements = document.querySelectorAll(selector);\r\n\t\t// * логика такая при загрузке страницы проверяется ratio и sex на значения заданные в localStorage\r\n\t\telements.forEach(elem => {\r\n\t\t\telem.classList.remove(activeClass); // удаляем класс активности\r\n\t\t\tif (elem.getAttribute('id') === localStorage.getItem('sex')) { // если элемент кот перебираем будет по значению атрибута id равен из локалстоража айтему sex\r\n\t\t\t\telem.classList.add(activeClass);  // то назначаем класс активности\r\n\t\t\t}\r\n\t\t\tif (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) { // аналогично только для значения атрибута data-ratio\r\n\t\t\t\telem.classList.add(activeClass);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// !               div так как мы обращаемся к блокам этих селекторов\r\n\tinitLocalSettings('#gender div', 'calculating__choose-item_active');\r\n\tinitLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\t// функция расчета\r\n\tfunction calcTotal() {\r\n\t\tif (!sex || !height || !weight || !age || !ratio) {\r\n\t\t\tresult.textContent = '____';\r\n\t\t\treturn; // return сразу прекратит функцию если условие выше выполнится\r\n\t\t}\r\n\r\n\t\tif (sex === 'female') {\r\n\t\t\tresult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n\t\t} else {\r\n\t\t\tresult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n\t\t}\r\n\t}\r\n\r\n\t// * эту функ вызываем неск раз так как при любых изменениях должен идти пересчет\r\n\tcalcTotal();\r\n\r\n\t// функция показывающая переключение, активные блоки и т.д.\r\n\tfunction getStaticInformation(selector, activeClass) {\r\n\t\t// ? таким образом получает внутри parentSelector все divы\r\n\t\tconst elements = document.querySelectorAll(selector);\r\n\r\n\t\t// ! перебираем, делигирование тут не прокатит будет между элементами при клике глюк\r\n\t\telements.forEach(elem => {\r\n\t\t\telem.addEventListener('click', (e) => {\r\n\t\t\t\t// тут пишем чтобы куда мы кликнем оттуда активность/пол\r\n\t\t\t\tif (e.target.getAttribute('data-ratio')) { // по дата атрибутам\r\n\t\t\t\t\tratio = +e.target.getAttribute('data-ratio');\r\n\t\t\t\t\t// * localStorage записываем по атрибуту\r\n\t\t\t\t\tlocalStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsex = e.target.getAttribute('id'); // по полу\r\n\t\t\t\t\tlocalStorage.setItem('sex', e.target.getAttribute('id'));\r\n\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// todo работаем с классами активности\r\n\t\t\t\telements.forEach(elem => {\r\n\t\t\t\t\telem.classList.remove(activeClass); // убираем класс активности кот передали в функцию\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\te.target.classList.add(activeClass); // доб класс активности тому элементу на кот кликнули\t\t\t\r\n\t\r\n\t\t\t\t// * эту функ вызываем неск раз так как при любых изменениях должен идти пересчет\r\n\t\t\t\tcalcTotal();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// !                  div так как мы обращаемся к блокам этих селекторов\r\n\tgetStaticInformation('#gender div', 'calculating__choose-item_active');\r\n\tgetStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n\t// функция собирающая  данные из инпутов\r\n\tfunction getDynamicInformation(selector) {\r\n\t\tconst input = document.querySelector(selector);\r\n\r\n\t\tinput.addEventListener('input', () => {\r\n\r\n\t\t\t// ! если юзер вводит буквы\r\n\t\t\tif (input.value.match(/\\D/g)) {\r\n\t\t\t\tinput.style.border = '1px solid red';\r\n\t\t\t} else {\r\n\t\t\t\tinput.style.border = 'none';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// ? используем switch/case чтобы с разных инпутов можно было подобрать данные\r\n\t\t\tswitch (input.getAttribute('id')) {\r\n\t\t\t\tcase 'height':\r\n\t\t\t\t\theight = +input.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'weight':\r\n\t\t\t\t\tweight = +input.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'age':\r\n\t\t\t\t\tage = +input.value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// * эту функ вызываем неск раз так как при любых изменениях должен идти пересчет\r\n\t\t\tcalcTotal();\r\n\t\t});\r\n\t}\r\n\r\n\tgetDynamicInformation('#height');\r\n\tgetDynamicInformation('#weight');\r\n\tgetDynamicInformation('#age');\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\n// ? пишем функцию cards и внутрь перемещаем участок кода с cards из файла script.js\r\nfunction cards() {\r\n\t// получаю карточки\r\n\tclass MenuCard {\r\n\t\t// путь к картинке, альт текст, заголовок, описание, цена, родитель куда помещаются карточки\r\n\t\t// ...classes это rest оператор\r\n\t\tconstructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n\t\t\tthis.src = src;\r\n\t\t\tthis.alt = alt;\r\n\t\t\tthis.title = title;\r\n\t\t\tthis.descr = descr;\r\n\t\t\tthis.price = price;\r\n\t\t\t// передаем рекст оператор, он передается как массив\r\n\t\t\tthis.classes = classes;\r\n\t\t\t//  в this.parent кладем ДОМ элемент\r\n\t\t\tthis.parent = document.querySelector(parentSelector); // можно так же в render() делать\r\n\t\t\t// для курса валют\r\n\t\t\tthis.transfer = 27;\r\n\t\t\t// вызываем метод конвертации валюты\r\n\t\t\tthis.changeToUAH(); // его можно было так же и в методе render() вызывать\r\n\t\t}\r\n\r\n\t\t// метод конвертации валют\r\n\t\tchangeToUAH() {\r\n\t\t\t// умножаем цену на курс\r\n\t\t\tthis.price = this.price * this.transfer;\r\n\t\t\t// можно написать +this.price чтобы строка преобразовывалась в число\r\n\t\t\t// this.price = +this.price * this.transfer;\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\t// метод конвертации валют changeToUAH() можно и тут вызвать. или в конструкторе\r\n\r\n\t\t\t// тут пишем верстку\r\n\t\t\t// создаем див\r\n\t\t\tconst element = document.createElement('div');\r\n\r\n\t\t\t// назначаем классы this.classes который через rest оператор записан\r\n\r\n\t\t\t// если в ...classes ничего не передается, то присваиваем класс menu__item\r\n\t\t\tif (this.classes.length === 0) {\r\n\t\t\t\t// element.classList.add('menu__item'); // так можно но есть круче способ ниже\r\n\r\n\t\t\t\t// записываем класс menu__item в свойства this.element\r\n\t\t\t\tthis.element = 'menu__item';\r\n\t\t\t\telement.classList.add(this.element);\r\n\t\t\t} else {\r\n\t\t\t\t// className называем каждый элемент внутри массива. className это аргумент => функции\r\n\t\t\t\tthis.classes.forEach((className) => element.classList.add(className)); // element это переменная которая выше создана\r\n\t\t\t}\r\n\r\n\t\t\telement.innerHTML = `\r\n\t\t\t\t<img src=${this.src} alt=${this.alt}>\r\n\t\t\t\t<h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n\t\t\t\t<div class=\"menu__item-descr\">${this.descr}</div>\r\n\t\t\t\t<div class=\"menu__item-divider\"></div>\r\n\t\t\t\t<div class=\"menu__item-price\">\r\n\t\t\t\t\t<div class=\"menu__item-cost\">Цена:</div>\r\n\t\t\t\t\t<div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\t\t// наш новый созданный ДОМ элемент помещаем в element\r\n\t\t\tthis.parent.append(element);\r\n\t\t}\r\n\t}\r\n\r\n\t// создание элементов динамически:\r\n\t// классами\r\n\tgetResource('http://localhost:3000/menu') // url берем из терминала\r\n\t\t.then(data => { // данные приходящие с сервера, приходят как массив\r\n\t\t\tdata.forEach(({\r\n\t\t\t\timg,\r\n\t\t\t\taltimg,\r\n\t\t\t\ttitle,\r\n\t\t\t\tdescr,\r\n\t\t\t\tprice\r\n\t\t\t}) => { // используем дестуктуризацию - получаем значения ключей\r\n\t\t\t\tnew MenuCard(img, altimg, title, descr, price, '.menu .container').render(); // вызваем конструктор MenuCard(в конце 'куда вставляем в верстку').метод render()\r\n\t\t\t});\r\n\t\t});\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default cards;","// ! импорты должны быть в самом верху\r\nimport {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\n// ? пишем функцию и внутрь перемещаем участок кода из файла script.js\r\nfunction forms(formSelector, modalTimerId) { // ! передаем аргументы которые принимают селекторы из файла scripts.js\r\n\t// реализуем отправку данных форм, т.к. их 2 то делаем чер функ\r\n\r\n\t// получаем формы\r\n\tconst forms = document.querySelectorAll(formSelector);\r\n\r\n\t// объект который будет вводть юзеру сообщение в зависимости от ситуации\r\n\tconst message = {\r\n\t\tloading: 'img/form/spinner.svg',\r\n\t\tsucces: 'Спасибо! Скоро мы с вами свяжемся',\r\n\t\tfailure: 'Что-то пошло не так...'\r\n\t};\r\n\r\n\t// подвязываем под все формы bindPostData\r\n\tforms.forEach(item => {\r\n\t\tbindPostData(item);\r\n\t});\r\n\r\n\r\n\t// функция отвечающая за привязку постинга\r\n\tfunction bindPostData(form) {\r\n\t\t// событие 'submit', (объект событие) срабатывает каждый раз когда пытаемся отправить форму\r\n\t\tform.addEventListener('submit', (e) => {\r\n\t\t\t// отменяем стандартное поведение браузера\r\n\t\t\te.preventDefault(); // надо писать в начале\r\n\r\n\t\t\t// при отправки запроса юзера будем уведомлять\r\n\t\t\t// создаем img\r\n\t\t\tconst statusMessage = document.createElement('img');\r\n\t\t\t// обращаемся к атрибуту\r\n\t\t\tstatusMessage.src = message.loading;\r\n\t\t\t// как только отправили запрос нажали submit (кнопку отправки формы)  (увидит тока если медленный интернет)\r\n\t\t\tstatusMessage.style.cssText = `\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t`;\r\n\r\n\t\t\t// отправляем на страницу statusMessage\r\n\t\t\t// form.append(statusMessage); // тут спинер ломает внизу верстку где форма не в модалке\r\n\t\t\t// аппендит спинер не в саму форму а после нее. в модалке ниче не поменяется\r\n\t\t\t// insertAdjacentElement('куда вставляем afterend это после формы', что нужно вставить)\r\n\t\t\tform.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\r\n\t\t\t// работа с сервером fetch api\r\n\r\n\t\t\t// через JSON\r\n\t\t\t// в перемен конструктор FormData(форма из которой нужно собрать данные)\r\n\t\t\t// берем formData которая собрала все данные с формы\r\n\t\t\tconst formData = new FormData(form); // ! важно чтобы в верстке у input были атрибуты name\r\n\r\n\t\t\t// entries() превращает объект в массив массивов т.е. в матрицу\r\n\t\t\t// fromEntries() делает обратно из матрицы в объект\r\n\t\t\t// данные с формы полученные выше превращаем в матрицу, после в классический объект, а после в JSON\r\n\t\t\tconst json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n\t\t\t// JSON полученный выше отправляем на сервер\r\n\t\t\tpostData('http://localhost:3000/requests', json) // (url, body который пойдет на сервер)\r\n\t\t\t\t.then(data => { // обрабатываем результат запроса через промисы\r\n\t\t\t\t\t// с сервера вернется data\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t// когда мы сделали запрос и все успешно пришло выводим сообщение succes: 'Спасибо! Скоро мы с вами свяжемся'\r\n\t\t\t\t\tshowThanksModal(message.succes);\r\n\t\t\t\t\t// удаляем statusMessage со страницы\r\n\t\t\t\t\tstatusMessage.remove();\r\n\t\t\t\t}).catch(() => { // пишем операцию которая соотвествует ошибке\r\n\t\t\t\t\t// catch() есть особенность если к примеру указать путь к серверу не тот, то он все равно выполнит resolve. а вот если к примеру нет сети 404 ошибка и тогда он выполнит reject\r\n\t\t\t\t\t// выводим сообщение failure: 'Что-то пошло не так...'\r\n\t\t\t\t\tshowThanksModal(message.failure);\r\n\t\t\t\t}).finally(() => { // действие которое будет выполняться всегда вне зависимости от результата\r\n\t\t\t\t\t// очистка формы после успешной отправки\r\n\t\t\t\t\tform.reset(); // обращаемся к форме и метод reset() очищает ее. альтернатива это в этой форме перебрать инпуты и очистить их вэлью\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// функция показывает модалку с благодарностью юзеру/ message это будет сообщ кот будет показ юзеру о статусе отправки\r\n\tfunction showThanksModal(message) { // message будем брать из const message котор выше писали при отправке запросов\r\n\t\tconst prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n\t\t// скрываем этот блок (не удаляем т к юзер может открыть модалку и попытаться отправить форму)\r\n\t\tprevModalDialog.classList.add('hide');\r\n\r\n\r\n\t\t// задача открыть класс модал и сформировать структуру внутри\r\n\r\n\t\t// открываем модалку openModal() есть выше в коде когда писали модалку\r\n\t\topenModal('.modal', modalTimerId); // (селектор модальн окна кот будем закрывать, modalTimerId приходит из файла script.js)\r\n\r\n\t\t// нужно создать блок обвертка\r\n\t\tconst thanksModal = document.createElement('div'); // создаем див\r\n\t\t// добавляем класс. по сути заменяем класс тот что выше скрыли\r\n\t\tthanksModal.classList.add('modal__dialog');\r\n\t\t// формируем внутри верстку\r\n\t\tthanksModal.innerHTML = `\r\n\t\t\t<div class='modal__content'>\r\n\t\t\t\t<div class='modal__close' data-close>×</div>\r\n\t\t\t\t<div class='modal__title'>${message}</div>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t\t// помещаем на страницу thanksModal\r\n\t\tdocument.querySelector('.modal').append(thanksModal);\r\n\r\n\t\t// нужно чтобы все через время возвращалось обратно\r\n\t\tsetTimeout(() => {\r\n\t\t\tthanksModal.remove(); // убирать thanksModal\r\n\t\t\t// показывать предидущий контент\r\n\t\t\tprevModalDialog.classList.add('show'); // доб класс show\r\n\t\t\tprevModalDialog.classList.remove('hide'); // убир класс hide\r\n\t\t\tcloseModal('.modal'); // закр мод окно (селектор модальн окна кот будем закрывать)\r\n\t\t}, 2000);\r\n\t}\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default forms;","function closeModal(modalSelector) {\r\n\t// ! чтобы получить аргумент-селектор\r\n\tconst modal = document.querySelector(modalSelector);\r\n\r\n\tmodal.classList.add('hide');\r\n\tmodal.classList.remove('show');\r\n\t// стиль вкл прокрутку при закр мод окна '' означ по умолч браузер сам подставит\r\n\tdocument.body.style.overflow = '';\r\n}\r\n\r\nfunction openModal(modalSelector, modalTimerId) { // * modalTimerId передаем в аргумент\r\n\t// ! чтобы получить аргумент-селектор\r\n\tconst modal = document.querySelector(modalSelector);\r\n\r\n\tmodal.classList.add('show');\r\n\tmodal.classList.remove('hide');\r\n\t// стиль блокирующий прокрутку при откр модальн окна\r\n\tdocument.body.style.overflow = 'hidden';\r\n\r\n\tconsole.log(modalTimerId);\r\n\t// если modalTimerId был передан, то тогда запускаем clearInterval\r\n\tif (modalTimerId) {\r\n\t\tclearInterval(modalTimerId);\r\n\t}\r\n}\r\n\r\n// ? пишем функцию и внутрь перемещаем участок кода из файла script.js\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) { // ! передаем аргументы которые принимают селекторы из файла scripts.js и modalTimerId(он выше в коде)\r\n\r\n\t// ! селекторы идут как аргументы функции\r\n\tconst modalTrigger = document.querySelectorAll(triggerSelector),\r\n\t\tmodal = document.querySelector(modalSelector);\r\n\r\n\tmodalTrigger.forEach((btn) => {\t// * мы передаем в функцию modalSelector и поэтому перед функ пишем () => как бы обарачиваем функцию, чтобы она вызывалась только по клику\r\n\t\tbtn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n\t});\r\n\r\n\t// закрытие модалки при клике за пределы модалки\r\n\tmodal.addEventListener('click', (e) => {\r\n\t\t// если е.таргет явлеется modal или е.таргет будет крестиком (получаем атрибут data-close) и равен пустой строке\r\n\t\tif (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n\t\t\tcloseModal(modalSelector); // то мы закрывает модалку\r\n\t\t}\r\n\t});\r\n\r\n\t// закрытие модалки при нажатии Esc\r\n\tdocument.addEventListener('keydown', (e) => {\r\n\t\t// eventcode у Esc - Escape && чтобы функ closeModal() вызывалась только когда модальн окно открыто\r\n\t\tif (e.code === 'Escape' && modal.classList.contains('show')) {\r\n\t\t\tcloseModal(modalSelector);\r\n\t\t}\r\n\t});\r\n\r\n\t// функция появления модалки\r\n\tfunction showModalByScroll() {\r\n\t\t// если прокрученная часть + видимая часть на сайте без прокрутки >= полный сайт (полная прокрутка)\r\n\t\tif (\r\n\t\t\twindow.pageYOffset + document.documentElement.clientHeight >=\r\n\t\t\tdocument.documentElement.scrollHeight\r\n\t\t) {\r\n\t\t\topenModal(modalSelector, modalTimerId);\r\n\t\t\t// удаляем обработчик события чтобы работал только 1 раз\r\n\t\t\twindow.removeEventListener('scroll', showModalByScroll);\r\n\t\t}\r\n\t}\r\n\r\n\t// модалка появляется когда юзер проскроллил сайт\r\n\twindow.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default modal; // ? экспорт по умолчанию\r\nexport {closeModal}; // ? экспорт именнованый\r\nexport {openModal};","// ? пишем функцию и внутрь перемещаем участок кода из файла script.js\r\nfunction slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n\r\n\tconst slides = document.querySelectorAll(slide),\r\n\t\tslider = document.querySelector(container),\r\n\t\tprev = document.querySelector(prevArrow),\r\n\t\tnext = document.querySelector(nextArrow),\r\n\t\ttotal = document.querySelector(totalCounter),\r\n\t\tcurrent = document.querySelector(currentCounter),\r\n\t\tslidesWrapper = document.querySelector(wrapper),\r\n\t\tslidesField = document.querySelector(field),\r\n\t\twidth = window.getComputedStyle(slidesWrapper).width; // получаем compluted style (стили от css)\r\n\r\n\t// индекс определяющий текущее положение в слайдере\r\n\tlet slideIndex = 1; // 1 тк в прогр идет с 0\r\n\t// отступ чтобы понимать какой слайд показывается\r\n\tlet offset = 0; // насколько мы отступили\r\n\r\n\t// условие чтобы подставлялся динамически тотал - сколько всего слайдов\r\n\tif (slides.length < 10) {\r\n\t\ttotal.textContent = `0${slides.length}`;\r\n\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t} else {\r\n\t\ttotal.textContent = slides.length;\r\n\t\tcurrent.textContent = slideIndex;\r\n\t}\r\n\r\n\t// устанавливаем ширину\r\n\tslidesField.style.width = 100 * slides.length + '%';\r\n\tslidesField.style.display = 'flex';\r\n\tslidesField.style.transition = '0.5s all';\r\n\r\n\tslidesWrapper.style.overflow = 'hidden';\r\n\r\n\r\n\t// перебираем слайды чтобы каждому задать ширину\r\n\tslides.forEach(slide => {\r\n\t\tslide.style.width = width;\r\n\t});\r\n\r\n\tslider.style.position = 'relative';\r\n\r\n\t// обвертка для всех точек (элем навигаци) и их стилизация\r\n\tconst indicators = document.createElement('ol'),\r\n\t\t// ! созд массив, потом в него будем пушить наши дотсы; потом в условии перекл дотсы\r\n\t\tdots = [];\r\n\r\n\tindicators.classList.add('carousel-indicators');\r\n\tindicators.style.cssText = `\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\tz-index: 15;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tmargin-right: 15%;\r\n\t\tmargin-left: 15%;\r\n\t\tlist-style: none;\r\n\t`;\r\n\tslider.append(indicators); // помещаем обвертку внутрь сладера\r\n\r\n\t// создаем с помощью цикла несколько точек\r\n\tfor (let i = 0; i < slides.length; i++) {\r\n\t\tconst dot = document.createElement('li'); // создаем точки\r\n\t\t// ! задаем атрибут,  i + 1 будет добавлять число к атрибуту начиная с 1\r\n\t\tdot.setAttribute('data-slide-to', i + 1);\r\n\r\n\t\t// стилизуем точки\r\n\t\tdot.style.cssText = `\r\n\t\t\tbox-sizing: content-box;\r\n\t\t\tflex: 0 1 auto;\r\n\t\t\twidth: 30px;\r\n\t\t\theight: 6px;\r\n\t\t\tmargin-right: 3px;\r\n\t\t\tmargin-left: 3px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tbackground-clip: padding-box;\r\n\t\t\tborder-top: 10px solid transparent;\r\n\t\t\tborder-bottom: 10px solid transparent;\r\n\t\t\topacity: .5;\r\n\t\t\ttransition: opacity .6s ease;\r\n\t\t`;\r\n\r\n\t\t// когда i == 0 меняем опасити на 1\r\n\t\tif (i == 0) {\r\n\t\t\tdot.style.opacity = 1;\r\n\t\t}\r\n\r\n\t\t// вставляем точки внутрь indicators\r\n\t\tindicators.append(dot);\r\n\t\t// ! в массив dots пушим dot \r\n\t\tdots.push(dot);\r\n\t}\r\n\r\n\t// функция изменения опасити у dots\r\n\tfunction changeDotsOpacity() {\r\n\t\t// ! у массива дотс изначально будет у каждого дот\r\n\t\tdots.forEach(dot => dot.style.opacity = '.5');\r\n\t\t// ! далее опасити меняем / идет поведение как выше у slides.length - 1\r\n\t\tdots[slideIndex - 1].style.opacity = 1;\r\n\t}\r\n\r\n\t// функция изменения цифр у счетчика слайдера \r\n\tfunction changeSlideIndex() {\r\n\t\t// в зависимости от контроля слайдиндекс меняем значение где цифры\r\n\t\tif (slides.length < 10) {\r\n\t\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t\t} else {\r\n\t\t\tcurrent.textContent = slideIndex;\r\n\t\t}\r\n\t}\r\n\r\n\t// функция трансормирует строку в цисло и заменяет с помощью replace() удаляем все не числа из стркоки\r\n\tfunction deleteNotDigits(str) {\r\n\t\treturn +str.replace(/\\D/g, '');\r\n\t}\r\n\r\n\tnext.addEventListener('click', () => {\r\n\t\t// если ушли в правую границу (конец слайдера) то перемещаемся в начало\r\n\t\tif (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n\t\t\toffset = 0;\r\n\t\t} else {\r\n\t\t\t// когда мы нажимаем на стрелку вправо,то к offset будет прибавляться ширина еще одного слайда и слайд будет смещаться\r\n\t\t\toffset += deleteNotDigits(width);\r\n\t\t}\r\n\r\n\t\t// сдвигаем слайд\r\n\t\tslidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\t\t// контролируем слайдиндекс\r\n\t\tif (slideIndex == slides.length) {\r\n\t\t\tslideIndex = 1;\r\n\t\t} else {\r\n\t\t\tslideIndex++;\r\n\t\t}\r\n\r\n\t\tchangeSlideIndex();\r\n\t\tchangeDotsOpacity();\r\n\t});\r\n\r\n\tprev.addEventListener('click', () => {\r\n\t\tif (offset == 0) { // тут сравниваем\r\n\t\t\t// а тут присваиваем\r\n\t\t\toffset = deleteNotDigits(width) * (slides.length - 1);\r\n\t\t} else {\r\n\t\t\toffset -= deleteNotDigits(width);\r\n\t\t}\r\n\r\n\t\t// сдвигаем слайд\r\n\t\tslidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\t\t// контролируем слайдиндекс\r\n\t\tif (slideIndex == 1) {\r\n\t\t\tslideIndex = slides.length;\r\n\t\t} else {\r\n\t\t\tslideIndex--;\r\n\t\t}\r\n\r\n\t\tchangeSlideIndex();\r\n\t\tchangeDotsOpacity();\r\n\t});\r\n\r\n\t// пишем переключение слайдов (с нумерацией) при кликах на dots реализовываем через  объект событие и атрибут\r\n\tdots.forEach(dot => {\r\n\t\tdot.addEventListener('click', (e) => {\r\n\t\t\tconst slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n\t\t\t// ! ниже все меняем при изменение slideTo (кликнули на 4 и цифрра сменилась на 4)\r\n\t\t\tslideIndex = slideTo;\r\n\t\t\toffset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n\t\t\tslidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\t\t\tchangeSlideIndex();\r\n\t\t\tchangeDotsOpacity();\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default slider;","// ? пишем функцию tabs и внутрь перемещаем участок кода с tabs из файла script.js\r\nfunction tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n\tconst tabs = document.querySelectorAll(tabsSelector),\r\n\t\ttabsContent = document.querySelectorAll(tabsContentSelector),\r\n\t\ttabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\t// скрыть все ненужные табы\r\n\tfunction hideTabContent() {\r\n\t\t// перебрать псевдомассив\r\n\t\ttabsContent.forEach((item) => {\r\n\t\t\titem.classList.add('hide');\r\n\t\t\titem.classList.remove('show', 'fade');\r\n\t\t});\r\n\r\n\t\t// скрыв, надо убрать у всех табов класс активности\r\n\t\ttabs.forEach((item) => {\r\n\t\t\titem.classList.remove(activeClass);\r\n\t\t});\r\n\t}\r\n\r\n\t// показывать табы\r\n\tfunction showTabContent(i = 0) {\r\n\t\t// надо понять к какому элементу обращаюсь\r\n\t\ttabsContent[i].classList.add('show', 'fade');\r\n\t\ttabsContent[i].classList.remove('hide');\r\n\t\ttabs[i].classList.add(activeClass);\r\n\t}\r\n\r\n\thideTabContent();\r\n\tshowTabContent();\r\n\r\n\t// вешаю обработчик, клик и колбэк. а в колбэк объект событие\r\n\ttabsParent.addEventListener('click', (event) => {\r\n\t\t// обращаю event.target в переменную это делается чтобы проще его было чаще использовать\r\n\t\tconst target = event.target;\r\n\t\t// проверяю на таргет (переменная выше) потом таргет.класслист,\r\n\t\t// при помощи контэйнс определяю что точно кликнул в таб\r\n\t\tif (target && target.classList.contains(tabsSelector.slice(1))) { // * tabsSelector.slice(1) пишем так потому что tabsSelector передается с точкой и slice формирует новую строку без 1 символа, то есть точки \r\n\t\t\t// перебераю псевдомассив, колбэк(айтем - это каждый таб кот перебираю и ай...\r\n\t\t\t// ай отвечает за номер элемента по порядку)\r\n\t\t\ttabs.forEach((item, i) => {\r\n\t\t\t\t// если таргет (тот элем в кот кликнул) будет совпадать с тем элем кот перебираю\r\n\t\t\t\tif (target == item) {\r\n\t\t\t\t\t// то вызоваю 2 функ\r\n\t\t\t\t\t// скрываю все табы\r\n\t\t\t\t\thideTabContent();\r\n\t\t\t\t\t// показываю только тот который совпадает и передаю ай... (ай номер элемента который совпал)\r\n\t\t\t\t\tshowTabContent(i);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default tabs;","// ? пишем функцию и внутрь перемещаем участок кода из файла script.js\r\nfunction timer(id, deadline) {\r\n\r\n\t// функция определяющая разницу между дедлайном и текущим временем\r\n\tfunction getTimeRemaining(endtime) {\r\n\t\t// парсим то что будет приходить в виде строки из deadline\r\n\t\t// получим колич милисек кот будет в конечном времени; отнимаем нашу тек дату в колич милисек\r\n\t\tconst t = Date.parse(endtime) - Date.parse(new Date()),\r\n\t\t\t// необходимо посчитать кол дней кот бу отображ в таймере\r\n\t\t\t// нужно взять кол милисек и разделить на кол милисек которые нах в 1 дне и надо бу округлить,\r\n\t\t\t//  чтобы не было дробных значений\r\n\t\t\t// Math.floor() округление до ближайшего целого\r\n\t\t\tdays = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n\t\t\t// часы если больше 24 должны % остатком от деления переноситься в дни я так понимаю\r\n\t\t\thours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n\t\t\tminutes = Math.floor((t / 1000 / 60) % 60),\r\n\t\t\tseconds = Math.floor((t / 1000) % 60);\r\n\r\n\t\t//  чтобы использовать переменные выше глобально, возращаем их\r\n\t\treturn {\r\n\t\t\ttotal: t,\r\n\t\t\tdays: days,\r\n\t\t\thours: hours,\r\n\t\t\tminutes: minutes,\r\n\t\t\tseconds: seconds,\r\n\t\t};\r\n\t}\r\n\r\n\t// функ добавляет 0 перед числами меньше 10ти\r\n\tfunction getZero(num) {\r\n\t\tif (num >= 0 && num < 10) {\r\n\t\t\treturn `0${num}`;\r\n\t\t} else {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t}\r\n\r\n\t// функция устанавливающая таймер на страницу\r\n\tfunction setClock(selector, endtime) {\r\n\t\tconst timer = document.querySelector(selector),\r\n\t\t\tdays = timer.querySelector('#days'),\r\n\t\t\thours = timer.querySelector('#hours'),\r\n\t\t\tminutes = timer.querySelector('#minutes'),\r\n\t\t\tseconds = timer.querySelector('#seconds'),\r\n\t\t\t// созд перем для обнов таймера каждую секунду. в него функцию обнов таймер помещаем\r\n\t\t\ttimeInterval = setInterval(updateClock, 1000);\r\n\r\n\t\t// запускаем функцию чтобы при загружки страницы при 0 секунде не было даты из верстки\r\n\t\tupdateClock();\r\n\r\n\t\t// функция обновляющая таймер каждую секунду\r\n\t\tfunction updateClock() {\r\n\t\t\t// расчет времени котор осталось прямо на эту секунду/ получаем из функции getTimeRemaining\r\n\t\t\tconst t = getTimeRemaining(endtime);\r\n\r\n\t\t\t// помещаем расчетные величины на страницу\r\n\t\t\t// можно через иннерХТМЛ а можно текстКонтент\r\n\t\t\tdays.innerHTML = getZero(t.days);\r\n\t\t\thours.innerHTML = getZero(t.hours);\r\n\t\t\tminutes.innerHTML = getZero(t.minutes);\r\n\t\t\tseconds.innerHTML = getZero(t.seconds);\r\n\r\n\t\t\t// остановка таймера\r\n\t\t\tif (t.total <= 0) {\r\n\t\t\t\t// встроенная функция (переменная timeInterval)\r\n\t\t\t\tclearInterval(timeInterval);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetClock(id, deadline);\r\n}\r\n\r\n// ! экспортируем используя ES6\r\nexport default timer;","// ! вынесли в отдельную папку так как работает с сервером\r\n\r\n// функция отвечающая за постинг данных\r\n// async говорит что будет асинхронный код\r\n// async await всегда используются в паре\r\nconst postData = async (url, data) => { // url кот передается в fetch, data данные которые будут поститься\r\n\t// обрабатываем данные которые пришли\r\n\t// await как бы (наподобие) делает синхронным, говорит надо дождаться\r\n\tconst res = await fetch(url, { // fetch(url чтобы ссылаться на сервер)\r\n\t\tmethod: 'POST', // метод\r\n\t\theaders: { // заголовки\r\n\t\t\t'Content-type': 'application/json'\r\n\t\t},\r\n\t\tbody: data // то тело которое мы будем отправлять\r\n\t});\r\n\t// возвращаем как json формат\r\n\treturn await res.json(); // res это промис\r\n};\r\n\r\n// функция для получения данных с сервера\r\nasync function getResource(url) { // url кот передается в fetch, data нет т.к. ниче не отправляем\r\n\t// обрабатываем данные которые пришли\r\n\t// await как бы (наподобие) делает синхронным, говорит надо дождаться\r\n\tlet res = await fetch(url);\r\n\r\n\t// fetch если столкнет с ошибкой http 404 и др. он не выдаст ошибку-catch-reject\r\n\t// ошибкой для fetch будет отсутствие инета и др. поэтому надо такое поведение обработать\r\n\tif (!res.ok) { // если в запросе что-то не так\r\n\t\tthrow new Error(`Cloud not fetch ${url}, status: ${res.status}`); // выбрасываем ошибку()\r\n\t}\r\n\r\n\t// возвращаем как json формат\r\n\treturn await res.json(); // res это промис\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// ! импортируем файлы и функцию используя ES6\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport openModal from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\t// модалка появляется спустя время на сайте   // * перед функ пишем () => как бы обарачиваем функцию, чтобы она вызывалась только по клику\r\n\tconst modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n\r\n\t// ! в аргументы передаем селекторы, которые передаются потом в аргументы функций в других файлах js\r\n\ttabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n\tmodal('[data-modal]', '.modal', modalTimerId);\r\n\ttimer('.timer', '2021-12-31');\r\n\tcards();\r\n\tcalc();\r\n\tforms('form', modalTimerId); // * modalTimerId передаю чтобы внутри модуля forms использовать\r\n\tslider({ // слайдер делаем по типу готовых решений slick  др\r\n\t\tcontainer: '.offer__slider',\r\n\t\tnextArrow: '.offer__slider-next',\r\n\t\tprevArrow: '.offer__slider-prev',\r\n\t\tslide: '.offer__slide',\r\n\t\ttotalCounter: '#total',\r\n\t\tcurrentCounter: '#current',\r\n\t\twrapper: '.offer__slider-wrapper',\r\n\t\tfield: '.offer__slider-inner'\r\n\t});\r\n\t\r\n});"],"names":[],"sourceRoot":""}